/* Layout styles */

.container {
  width: 100%;
  max-width: 1200px;
  margin: 0 auto;
  padding: 0 $spacer;
}

header {
  background-color: $dark-color;
  color: white;
  padding: $spacer * 1.5 0;
  margin-bottom: $spacer * 2;
  
  h1 {
    margin-bottom: 0;
    color: white;
    text-align: center;
  }
}

main {
  min-height: 70vh;
  padding-bottom: $spacer * 3;
}

footer {
  margin-top: $spacer * 3;
  padding: $spacer 0;
  text-align: center;
  color: $gray-600;
  font-size: 0.9rem;
  border-top: 1px solid $gray-200;
}

// Grid system
.row {
  display: flex;
  flex-wrap: wrap;
  margin-right: -$spacer * 0.5;
  margin-left: -$spacer * 0.5;
}

.col {
  flex: 1 0 0%;
  padding-right: $spacer * 0.5;
  padding-left: $spacer * 0.5;
}

@for $i from 1 through 12 {
  .col-#{$i} {
    flex: 0 0 auto;
    width: percentage($i / 12);
    padding-right: $spacer * 0.5;
    padding-left: $spacer * 0.5;
  }
}

// Responsive columns
@each $breakpoint, $width in $breakpoints {
  @if $width > 0 {
    @media (min-width: $width) {
      @for $i from 1 through 12 {
        .col-#{$breakpoint}-#{$i} {
          flex: 0 0 auto;
          width: percentage($i / 12);
        }
      }
    }
  }
}

// Two-column layout for auth pages
.auth-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  max-width: 500px;
  margin: 0 auto;
  padding: $spacer * 2;
  background-color: white;
  border-radius: $border-radius;
  box-shadow: $box-shadow-sm;
  
  @media (min-width: map-get($breakpoints, md)) {
    padding: $spacer * 3;
  }
}

// Fixed width containers for forms
.form-container {
  max-width: 600px;
  margin: 0 auto;
  padding: $spacer * 2;
  background-color: white;
  border-radius: $border-radius;
  box-shadow: $box-shadow-sm;
  
  .form-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: $spacer * 2;
    
    h2 {
      margin-bottom: 0;
    }
    
    .back-link {
      font-size: 0.9rem;
    }
  }
}

// Responsive design helpers
@media (max-width: map-get($breakpoints, md)) {
  .hide-sm {
    display: none !important;
  }
}

@media (min-width: map-get($breakpoints, md)) {
  .hide-md {
    display: none !important;
  }
} 